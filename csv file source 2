import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
import random

# Step 1: Load the dataset
df = pd.read_csv("intelligent_chatbot_dataset.csv")

# Step 2: Check data
print("Dataset Preview:")
print(df.head())

# Step 3: Define features and labels
X = df["Question"]
y = df["Category"]

# Step 4: Split into training and test data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Create a text classification pipeline
model = make_pipeline(TfidfVectorizer(), MultinomialNB())

# Step 6: Train the model
model.fit(X_train, y_train)

# Step 7: Evaluate the model
print("\nModel Accuracy on Test Set:", model.score(X_test, y_test))

# Step 8: Define a chatbot response function
def chatbot_response(user_input):
    category = model.predict([user_input])[0]
    possible_responses = df[df["Category"] == category]["Response"].values
    if len(possible_responses) > 0:
        return f"[{category}] {random.choice(possible_responses)}"
    else:
        return "I'm sorry, I don't understand your question."

# Step 9: Run chatbot loop
print("\nðŸ¤– Chatbot is ready! Type 'exit' to quit.")
while True:
    user_input = input("You: ")
    if user_input.lower() == 'exit':
        print("Bot: Goodbye!")
        break
    response = chatbot_response(user_input)
    print("Bot:", response)
